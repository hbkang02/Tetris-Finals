{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nexport function useInterval(callback, delay) {\n  _s();\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");","map":{"version":3,"names":["useEffect","useRef","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval"],"sources":["/Users/heebeumkang/react-tetris/src/hooks/useInterval.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,OAAO,SAASC,WAAW,CAACC,QAAQ,EAAEC,KAAK,EAAE;EAAA;EAC3C,MAAMC,aAAa,GAAGJ,MAAM,EAAE;EAC9B;EACAD,SAAS,CAAC,MAAM;IACdK,aAAa,CAACC,OAAO,GAAGH,QAAQ;EAClC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAH,SAAS,CAAC,MAAM;IACd,SAASO,IAAI,GAAG;MACdF,aAAa,CAACC,OAAO,EAAE;IACzB;IACA,IAAIF,KAAK,KAAK,IAAI,EAAE;MAClB,MAAMI,EAAE,GAAGC,WAAW,CAACF,IAAI,EAAEH,KAAK,CAAC;MACnC,OAAO,MAAM;QACXM,aAAa,CAACF,EAAE,CAAC;MACnB,CAAC;IACH;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;AACb;AAAC,GAnBeF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}