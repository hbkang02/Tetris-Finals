{"ast":null,"code":"var _jsxFileName = \"/Users/heebeumkang/tetris-finals/src/components/Tetris.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\nimport { createStage, checkCollision } from '../_gameHelpers';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tetris = () => {\n  _s();\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  console.log('re-render');\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n  const keyUp = _ref => {\n    let {\n      keyCode\n    } = _ref;\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n  };\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n  const dropPlayer = () => {\n    // We don't need to run the interval when we use the arrow down to\n    // move the tetromino downwards. So deactivate it for now.\n    setDropTime(null);\n    drop();\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  const move = _ref2 => {\n    let {\n      keyCode\n    } = _ref2;\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: keyUp,\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [gameOver ? /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: `Score: ${score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `rows: ${rows}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Level: ${level}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n          callback: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Tetris, \"bQx8h8NhtB+opP/xkNTHewL6+3c=\", false, function () {\n  return [usePlayer, useStage, useInterval];\n});\n_c = Tetris;\nexport default Tetris;\nvar _c;\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"names":["React","useState","StyledTetrisWrapper","StyledTetris","createStage","checkCollision","useInterval","usePlayer","useStage","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","console","log","movePlayer","dir","x","y","keyUp","keyCode","level","startGame","setScore","setLevel","setRows","drop","rows","prev","collided","pos","dropPlayer","move","e","score"],"sources":["/Users/heebeumkang/tetris-finals/src/components/Tetris.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\nimport { createStage, checkCollision } from '../_gameHelpers';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\n  console.log('re-render');\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    // We don't need to run the interval when we use the arrow down to\n    // move the tetromino downwards. So deactivate it for now.\n    setDropTime(null);\n    drop();\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,uBAAuB;AACzE,SAASC,WAAW,EAAEC,cAAc,QAAQ,iBAAiB;;AAE7D;AACA,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM,CAACgB,MAAM,EAAEC,eAAe,EAAEC,WAAW,EAAEC,YAAY,CAAC,GAAGb,SAAS,EAAE;EACxE,MAAM,CAACc,KAAK,EAAEC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAACS,MAAM,EAAEE,WAAW,CAAC;EAEpEK,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAExB,MAAMC,UAAU,GAAGC,GAAG,IAAI;IACxB,IAAI,CAACtB,cAAc,CAACY,MAAM,EAAEI,KAAK,EAAE;MAAEO,CAAC,EAAED,GAAG;MAAEE,CAAC,EAAE;IAAE,CAAC,CAAC,EAAE;MACpDX,eAAe,CAAC;QAAEU,CAAC,EAAED,GAAG;QAAEE,CAAC,EAAE;MAAE,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAMC,KAAK,GAAG,QAAiB;IAAA,IAAhB;MAAEC;IAAQ,CAAC;IACxB,IAAI,CAAChB,QAAQ,EAAE;MACb;MACA,IAAIgB,OAAO,KAAK,EAAE,EAAE;QAClBjB,WAAW,CAAC,IAAI,IAAIkB,KAAK,GAAG,CAAC,CAAC,CAAC;MACjC;IACF;EACF,CAAC;EAED,MAAMC,SAAS,GAAG,MAAM;IACtB;IACAX,QAAQ,CAAClB,WAAW,EAAE,CAAC;IACvBU,WAAW,CAAC,IAAI,CAAC;IACjBK,WAAW,EAAE;IACbe,QAAQ,CAAC,CAAC,CAAC;IACXC,QAAQ,CAAC,CAAC,CAAC;IACXC,OAAO,CAAC,CAAC,CAAC;IACVpB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMqB,IAAI,GAAG,MAAM;IACjB;IACA,IAAIC,IAAI,GAAG,CAACN,KAAK,GAAG,CAAC,IAAI,EAAE,EAAE;MAC3BG,QAAQ,CAACI,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC1B;MACAzB,WAAW,CAAC,IAAI,IAAIkB,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IACvC;IAEA,IAAI,CAAC3B,cAAc,CAACY,MAAM,EAAEI,KAAK,EAAE;MAAEO,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC,EAAE;MAClDX,eAAe,CAAC;QAAEU,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEW,QAAQ,EAAE;MAAM,CAAC,CAAC;IAClD,CAAC,MAAM;MACL;MACA,IAAIvB,MAAM,CAACwB,GAAG,CAACZ,CAAC,GAAG,CAAC,EAAE;QACpBL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BT,WAAW,CAAC,IAAI,CAAC;QACjBF,WAAW,CAAC,IAAI,CAAC;MACnB;MACAI,eAAe,CAAC;QAAEU,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEW,QAAQ,EAAE;MAAK,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAM;IACvB;IACA;IACA5B,WAAW,CAAC,IAAI,CAAC;IACjBuB,IAAI,EAAE;EACR,CAAC;;EAED;EACA;EACA/B,WAAW,CAAC,MAAM;IAChB+B,IAAI,EAAE;EACR,CAAC,EAAExB,QAAQ,CAAC;EAEZ,MAAM8B,IAAI,GAAG,SAAiB;IAAA,IAAhB;MAAEZ;IAAQ,CAAC;IACvB,IAAI,CAAChB,QAAQ,EAAE;MACb,IAAIgB,OAAO,KAAK,EAAE,EAAE;QAClBL,UAAU,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,MAAM,IAAIK,OAAO,KAAK,EAAE,EAAE;QACzBL,UAAU,CAAC,CAAC,CAAC;MACf,CAAC,MAAM,IAAIK,OAAO,KAAK,EAAE,EAAE;QACzBW,UAAU,EAAE;MACd,CAAC,MAAM,IAAIX,OAAO,KAAK,EAAE,EAAE;QACzBX,YAAY,CAACC,KAAK,EAAE,CAAC,CAAC;MACxB;IACF;EACF,CAAC;EAED,oBACE,QAAC,mBAAmB;IAClB,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAC,GAAG;IACZ,SAAS,EAAEuB,CAAC,IAAID,IAAI,CAACC,CAAC,CAAE;IACxB,OAAO,EAAEd,KAAM;IAAA,uBAEf,QAAC,YAAY;MAAA,wBACX,QAAC,KAAK;QAAC,KAAK,EAAET;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACvB;QAAA,WACGN,QAAQ,gBACP,QAAC,OAAO;UAAC,QAAQ,EAAEA,QAAS;UAAC,IAAI,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG,gBAEhD;UAAA,wBACE,QAAC,OAAO;YAAC,IAAI,EAAG,UAAS8B,KAAM;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eACpC,QAAC,OAAO;YAAC,IAAI,EAAG,SAAQP,IAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eAClC,QAAC,OAAO;YAAC,IAAI,EAAG,UAASN,KAAM;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAEvC,eACD,QAAC,WAAW;UAAC,QAAQ,EAAEC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAA;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACK;AAE1B,CAAC;AAAC,GA3GIrB,MAAM;EAAA,QAImDL,SAAS,EAC/BC,QAAQ,EA4D/CF,WAAW;AAAA;AAAA,KAjEPM,MAAM;AA6GZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}