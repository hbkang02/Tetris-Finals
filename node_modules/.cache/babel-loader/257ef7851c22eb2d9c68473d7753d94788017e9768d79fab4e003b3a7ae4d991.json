{"ast":null,"code":"export const TETROMINOS = {\n  0: {\n    shape: [[0]],\n    color: '0, 0, 0'\n  },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '80, 227, 230'\n  },\n  J: {\n    shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n    color: '36, 95, 223'\n  },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36'\n  },\n  O: {\n    shape: [['O', 'O'], ['O', 'O']],\n    color: '223, 217, 36'\n  },\n  S: {\n    shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n    color: '48, 211, 56'\n  },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198'\n  },\n  Z: {\n    shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n    color: '227, 78, 78'\n  }\n};\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};","map":{"version":3,"names":["TETROMINOS","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","length"],"sources":["/Users/heebeumkang/react-tetris/src/tetrominos.js"],"sourcesContent":["export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '80, 227, 230',\n  },\n  J: { shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]], color: '36, 95, 223' },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36',\n  },\n  O: { shape: [['O', 'O'], ['O', 'O']], color: '223, 217, 36' },\n  S: { shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]], color: '48, 211, 56' },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198',\n  },\n  Z: { shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]], color: '227, 78, 78' },\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG;EACxB,CAAC,EAAE;IAAEC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAU,CAAC;EACrCC,CAAC,EAAE;IACDF,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvEC,KAAK,EAAE;EACT,CAAC;EACDE,CAAC,EAAE;IAAEH,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAc,CAAC;EAC7EG,CAAC,EAAE;IACDJ,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAChDC,KAAK,EAAE;EACT,CAAC;EACDI,CAAC,EAAE;IAAEL,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAe,CAAC;EAC7DK,CAAC,EAAE;IAAEN,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAc,CAAC;EAC7EM,CAAC,EAAE;IACDP,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAChDC,KAAK,EAAE;EACT,CAAC;EACDO,CAAC,EAAE;IAAER,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAAEC,KAAK,EAAE;EAAc;AAC9E,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAG,MAAM;EACnC,MAAMC,UAAU,GAAG,SAAS;EAC5B,MAAMC,aAAa,GACjBD,UAAU,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,UAAU,CAACK,MAAM,CAAC,CAAC;EAC3D,OAAOhB,UAAU,CAACY,aAAa,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}