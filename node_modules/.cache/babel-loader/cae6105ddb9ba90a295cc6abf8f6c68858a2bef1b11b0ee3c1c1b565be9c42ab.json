{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createStage } from \"../_gameHelpers\";\nexport const useStage = (player, resetPlayer) => {\n  _s();\n  const [stage, setStage] = useState(createStage());\n  useEffect(() => {\n    const updateStage = prevStage => {\n      //first clear the stage(can use forloop instead for performance)\n      const newStage = prevStage.map(row => row.map(cell => cell[1] === 'clear' ? [0, 'clear'] : cell));\n    };\n    setStage(prev => updateStage(prev));\n  }, []);\n  return [stage, setStage];\n};\n_s(useStage, \"5P+otx0I7S1W+XNBDZZ95jKxV+k=\");","map":{"version":3,"names":["useEffect","useState","createStage","useStage","player","resetPlayer","stage","setStage","updateStage","prevStage","newStage","map","row","cell","prev"],"sources":["/Users/heebeumkang/react-tetris/src/hooks/useStage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { createStage } from \"../_gameHelpers\";\n\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n\n  useEffect(() => {\n    const updateStage = prevStage => {\n      //first clear the stage(can use forloop instead for performance)\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1]) === 'clear' ? [0, 'clear'] : cell))\n    }\n\n\n\n    setStage(prev => updateStage(prev))\n\n  }, [])\n\n  return [stage, setStage];\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,iBAAiB;AAG7C,OAAO,MAAMC,QAAQ,GAAG,CAACC,MAAM,EAAEC,WAAW,KAAK;EAAA;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACC,WAAW,EAAE,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAGC,SAAS,IAAI;MAC/B;MACA,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAACC,GAAG,IAChCA,GAAG,CAACD,GAAG,CAACE,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,KAAM,OAAO,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,GAAGA,IAAI,CAAC,CAAC;IACjE,CAAC;IAIDN,QAAQ,CAACO,IAAI,IAAIN,WAAW,CAACM,IAAI,CAAC,CAAC;EAErC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACR,KAAK,EAAEC,QAAQ,CAAC;AAC1B,CAAC;AAAC,GAjBWJ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}