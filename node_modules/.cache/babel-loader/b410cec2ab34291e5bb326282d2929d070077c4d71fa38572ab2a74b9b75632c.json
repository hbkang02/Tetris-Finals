{"ast":null,"code":"var _jsxFileName = \"/Users/heebeumkang/tetris-finals/src/components/Tetris.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//styled components\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/styledTetris\";\nimport Spline from \"@splinetool/react-spline\";\n\n//components\nimport Stage from \"./stage\";\nimport Display from \"./display\";\nimport StartButton from \"./startButton\";\n\n//custome Hooks\nimport { createStage, checkCollision } from \"../_gameHelpers\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tetris() {\n  _s();\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n  const movePlayerDown = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  // const spacePlayer = (dir) => {\n  //   while (!checkCollision(player, stage, { x: 0, y: 1 })) {\n  //     updatePlayerPos({ x: 0, y: 1, collided: false });\n  //   }\n  // }\n\n  const startGame = () => {\n    console.log(\"test\");\n\n    //reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n  const drop = () => {\n    console.log(dropTime);\n    // increase level when player cleared 5 rows\n    if (rows > (level + 1) * 5) {\n      setLevel(prev => prev + 1);\n      // increase the speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    //check collision on y axis\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      // when Game Over\n      if (player.pos.y < 1) {\n        console.log(\"Game Over!!\");\n        setDropTime(null);\n        setGameOver(true);\n      }\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n  const keyUp = _ref => {\n    let {\n      keyCode\n    } = _ref;\n    if (!gameOver) {\n      if (keyCode === 40 || keyCode === 83) {\n        // down key\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  // tetromino movement left, right, dropdown\n  const move = _ref2 => {\n    let {\n      keyCode\n    } = _ref2;\n    if (!gameOver) {\n      if (keyCode === 37 || keyCode === 65) {\n        //left key, a\n        movePlayer(-1);\n      } else if (keyCode === 39 || keyCode === 68) {\n        //right key, d\n        movePlayer(1);\n      } else if (keyCode === 40 || keyCode === 83) {\n        //down key, s\n        movePlayerDown();\n      } else if (keyCode === 38 || keyCode === 87) {\n        //up key, w\n        playerRotate(stage, 1);\n      } else if (keyCode === 16) {\n        //shift\n        playerRotate(stage, -1);\n        // } if (keyCode === 32) {\n        //   spacePlayer(stage);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: keyUp,\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [gameOver ? /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Git Gud!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: `Score: ${score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Rows: ${rows}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Level: ${level}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n          callback: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Tetris, \"4dLMhk0GWFQnd5Q+HqmTKcv5jRk=\", false, function () {\n  return [usePlayer, useStage, useGameStatus, useInterval];\n});\n_c = Tetris;\nvar _c;\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"names":["React","useState","StyledTetrisWrapper","StyledTetris","Spline","Stage","Display","StartButton","createStage","checkCollision","usePlayer","useStage","useInterval","useGameStatus","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setLevel","movePlayer","dir","x","y","movePlayerDown","drop","startGame","console","log","prev","collided","pos","keyUp","keyCode","move","e"],"sources":["/Users/heebeumkang/tetris-finals/src/components/Tetris.js"],"sourcesContent":["import React, { useState } from \"react\";\n//styled components\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/styledTetris\";\nimport Spline from \"@splinetool/react-spline\";\n\n//components\nimport Stage from \"./stage\";\nimport Display from \"./display\";\nimport StartButton from \"./startButton\";\n\n//custome Hooks\nimport { createStage, checkCollision } from \"../_gameHelpers\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\n\n\nexport default function Tetris() {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const movePlayerDown = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  // const spacePlayer = (dir) => {\n  //   while (!checkCollision(player, stage, { x: 0, y: 1 })) {\n  //     updatePlayerPos({ x: 0, y: 1, collided: false });\n  //   }\n  // }\n\n  const startGame = () => {\n    console.log(\"test\");\n\n    //reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    console.log(dropTime);\n    // increase level when player cleared 5 rows\n    if(rows > (level + 1) * 5) {\n      setLevel(prev => prev + 1);\n      // increase the speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    //check collision on y axis\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // when Game Over\n      if (player.pos.y < 1) {\n        console.log(\"Game Over!!\");\n        setDropTime(null);\n        setGameOver(true);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40 || keyCode === 83) {\n        // down key\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  // tetromino movement left, right, dropdown\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37 || keyCode === 65) {\n        //left key, a\n        movePlayer(-1);\n      } else if (keyCode === 39 || keyCode === 68) {\n        //right key, d\n        movePlayer(1);\n      } else if (keyCode === 40 || keyCode === 83) {\n        //down key, s\n        movePlayerDown();\n      } else if (keyCode === 38 || keyCode === 87) {\n        //up key, w\n        playerRotate(stage, 1);\n      } else if (keyCode === 16) {\n        //shift\n        playerRotate(stage, -1);\n      // } if (keyCode === 32) {\n      //   spacePlayer(stage);\n\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Git Gud!\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,uBAAuB;AACzE,OAAOC,MAAM,MAAM,0BAA0B;;AAE7C;AACA,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AACA,SAASC,WAAW,EAAEC,cAAc,QAAQ,iBAAiB;AAC7D,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,aAAa,QAAQ,wBAAwB;AAAC;AAIvD,eAAe,SAASC,MAAM,GAAG;EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM,CAACkB,MAAM,EAAEC,eAAe,EAAEC,WAAW,EAAEC,YAAY,CAAC,GAAGZ,SAAS,EAAE;EACxE,MAAM,CAACa,KAAK,EAAEC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACQ,MAAM,EAAEE,WAAW,CAAC;EACpE,MAAM,CAACK,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,aAAa,CAACY,WAAW,CAAC;EAGpF,MAAMO,UAAU,GAAIC,GAAG,IAAK;IAC1B,IAAI,CAACxB,cAAc,CAACU,MAAM,EAAEI,KAAK,EAAE;MAAEW,CAAC,EAAED,GAAG;MAAEE,CAAC,EAAE;IAAE,CAAC,CAAC,EAAE;MACpDf,eAAe,CAAC;QAAEc,CAAC,EAAED,GAAG;QAAEE,CAAC,EAAE;MAAE,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAMC,cAAc,GAAG,MAAM;IAC3BpB,WAAW,CAAC,IAAI,CAAC;IACjBqB,IAAI,EAAE;EACR,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,MAAMC,SAAS,GAAG,MAAM;IACtBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;;IAEnB;IACAhB,QAAQ,CAAChB,WAAW,EAAE,CAAC;IACvBQ,WAAW,CAAC,IAAI,CAAC;IACjBK,WAAW,EAAE;IACbH,WAAW,CAAC,KAAK,CAAC;IAClBS,QAAQ,CAAC,CAAC,CAAC;IACXE,OAAO,CAAC,CAAC,CAAC;IACVE,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,MAAMM,IAAI,GAAG,MAAM;IACjBE,OAAO,CAACC,GAAG,CAACzB,QAAQ,CAAC;IACrB;IACA,IAAGa,IAAI,GAAG,CAACE,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;MACzBC,QAAQ,CAACU,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC1B;MACAzB,WAAW,CAAC,IAAI,IAAIc,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IACvC;;IAEA;IACA,IAAI,CAACrB,cAAc,CAACU,MAAM,EAAEI,KAAK,EAAE;MAAEW,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC,EAAE;MAClDf,eAAe,CAAC;QAAEc,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEO,QAAQ,EAAE;MAAM,CAAC,CAAC;IAClD,CAAC,MAAM;MACL;MACA,IAAIvB,MAAM,CAACwB,GAAG,CAACR,CAAC,GAAG,CAAC,EAAE;QACpBI,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1BxB,WAAW,CAAC,IAAI,CAAC;QACjBE,WAAW,CAAC,IAAI,CAAC;MACnB;MACAE,eAAe,CAAC;QAAEc,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEO,QAAQ,EAAE;MAAK,CAAC,CAAC;IACjD;EACF,CAAC;EAGD,MAAME,KAAK,GAAG,QAAiB;IAAA,IAAhB;MAAEC;IAAQ,CAAC;IACxB,IAAI,CAAC5B,QAAQ,EAAE;MACb,IAAI4B,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,EAAE,EAAE;QACpC;QACA7B,WAAW,CAAC,IAAI,IAAIc,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;MACvC;IACF;EACF,CAAC;;EAED;EACA,MAAMgB,IAAI,GAAG,SAAiB;IAAA,IAAhB;MAAED;IAAQ,CAAC;IACvB,IAAI,CAAC5B,QAAQ,EAAE;MACb,IAAI4B,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,EAAE,EAAE;QACpC;QACAb,UAAU,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,MAAM,IAAIa,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,EAAE,EAAE;QAC3C;QACAb,UAAU,CAAC,CAAC,CAAC;MACf,CAAC,MAAM,IAAIa,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,EAAE,EAAE;QAC3C;QACAT,cAAc,EAAE;MAClB,CAAC,MAAM,IAAIS,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,EAAE,EAAE;QAC3C;QACAvB,YAAY,CAACC,KAAK,EAAE,CAAC,CAAC;MACxB,CAAC,MAAM,IAAIsB,OAAO,KAAK,EAAE,EAAE;QACzB;QACAvB,YAAY,CAACC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzB;QACA;MAEA;IACF;EACF,CAAC;;EAEDX,WAAW,CAAC,MAAM;IAChByB,IAAI,EAAE;EACR,CAAC,EAAEtB,QAAQ,CAAC;EAEZ,oBACE,QAAC,mBAAmB;IAClB,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAC,GAAG;IACZ,SAAS,EAAGgC,CAAC,IAAKD,IAAI,CAACC,CAAC,CAAE;IAC1B,OAAO,EAAEH,KAAM;IAAA,uBAEf,QAAC,YAAY;MAAA,wBACX,QAAC,KAAK;QAAC,KAAK,EAAErB;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACvB;QAAA,WACGN,QAAQ,gBACP,QAAC,OAAO;UAAC,QAAQ,EAAEA,QAAS;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,gBAE/C;UAAA,wBACE,QAAC,OAAO;YAAC,IAAI,EAAG,UAASS,KAAM;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eACpC,QAAC,OAAO;YAAC,IAAI,EAAG,SAAQE,IAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eAClC,QAAC,OAAO;YAAC,IAAI,EAAG,UAASE,KAAM;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAEvC,eACD,QAAC,WAAW;UAAC,QAAQ,EAAEQ;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAA;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACK;AAE1B;AAAC,GA7HuBxB,MAAM;EAAA,QAIiCJ,SAAS,EAC/BC,QAAQ,EACWE,aAAa,EA2FvED,WAAW;AAAA;AAAA,KAjGWE,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}