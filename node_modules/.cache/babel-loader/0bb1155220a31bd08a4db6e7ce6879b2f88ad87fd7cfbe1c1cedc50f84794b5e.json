{"ast":null,"code":"// export const STAGE_WIDTH = 12;\n// export const STAGE_HEIGHT = 20;\n\n// export const createStage = () =>\n//   Array.from(Array(STAGE_HEIGHT), () =>\n//     new Array(STAGE_WIDTH).fill([0, \"clear\"])\n//   );\n\n// export const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n//   for (let y = 0; y < player.tetromino.length; y += 1) {\n//     for (let x = 0; x < player.tetromino[y].length; x += 1) {\n//       // 1. Check that we're on an actual Tetromino cell\n//       if (player.tetromino[y][x] !== 0) {\n//         if (\n//           // 2. Check that our move is inside the game areas height (y)\n//           // we shouldn't go through the bottom of the play area\n//           !stage[y + player.pos.y + moveY] ||\n//           // 3. Check that our move is inside the game areas width (x)\n//           !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n//           // 4. Check that the cell we're moving to isn't set to clear\n//           stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n//             \"clear\"\n//         ) {\n//           return true;\n//         }\n//       }\n//     }\n//   }\n// };","map":{"version":3,"names":[],"sources":["/Users/heebeumkang/react-tetris/src/_gameHelpers.js"],"sourcesContent":["// export const STAGE_WIDTH = 12;\n// export const STAGE_HEIGHT = 20;\n\n// export const createStage = () =>\n//   Array.from(Array(STAGE_HEIGHT), () =>\n//     new Array(STAGE_WIDTH).fill([0, \"clear\"])\n//   );\n\n// export const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n//   for (let y = 0; y < player.tetromino.length; y += 1) {\n//     for (let x = 0; x < player.tetromino[y].length; x += 1) {\n//       // 1. Check that we're on an actual Tetromino cell\n//       if (player.tetromino[y][x] !== 0) {\n//         if (\n//           // 2. Check that our move is inside the game areas height (y)\n//           // we shouldn't go through the bottom of the play area\n//           !stage[y + player.pos.y + moveY] ||\n//           // 3. Check that our move is inside the game areas width (x)\n//           !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n//           // 4. Check that the cell we're moving to isn't set to clear\n//           stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n//             \"clear\"\n//         ) {\n//           return true;\n//         }\n//       }\n//     }\n//   }\n// };\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}