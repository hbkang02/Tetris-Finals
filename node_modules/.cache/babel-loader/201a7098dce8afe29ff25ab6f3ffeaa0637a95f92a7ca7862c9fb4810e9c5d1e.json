{"ast":null,"code":"var _jsxFileName = \"/Users/heebeumkang/tetris-finals/src/components/bgm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Sound from \"react-sound\";\nimport bgm from \"../sound/Hurry_bgm.mp3\";\n// import \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlaySound() {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  const handlePlay = () => {\n    audioRef.current.play();\n    setIsPlaying(true);\n  };\n  const handleStop = () => {\n    audioRef.current.pause();\n    audioRef.current.currentTime = 0;\n    setIsPlaying(false);\n  };\n\n  // useEffect(() => {\n  //   if(value)\n  //   play();\n  // }, [value]);\n\n  function play() {\n    new Audio(Hurry_bgm).play();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: Hurry_bgm,\n        type: \"bgm/mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isPlaying ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlay,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n// <button onClick={() => (setValue = value + 1)}>Play sound</button>;\n\n// const PlaySound = (\n//   handleSongLoading,\n//   handleSongPlaying,\n//   handleSongFinishedPlaying\n// ) => {\n//   const [isPlaying, setIsPlaying] = useState(false);\n//   return (\n//     <body>\n//     <div className=\"playsound\">\n//       <span className=\"songbox\">\n//        <button onClick={() => setIsPlaying(!isPlaying)}>{!isPlaying ? \"PLAY\" : \"STOP\"}</button>\n//       </span>\n//       <Sound\n//         url={Hurry_bgm}\n//         playStatus={\n//           isPlaying ? Sound.status.PLAYING : Sound.status.STOPPED\n//         }\n//         playFromPosition={300}\n//         onLoading={handleSongLoading}\n//         onPlaying={handleSongPlaying}\n//         onFinishedPlaying={handleSongFinishedPlaying}\n//       />\n//     </div>\n//     </body>\n//   )\n// };\n\n// export default PlaySound\n_s(PlaySound, \"sL4xjVLmTF7f1+jWdlUm6K/Qvq0=\");\n_c = PlaySound;\nvar _c;\n$RefreshReg$(_c, \"PlaySound\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Sound","bgm","PlaySound","isPlaying","setIsPlaying","audioRef","handlePlay","current","play","handleStop","pause","currentTime","Audio","Hurry_bgm"],"sources":["/Users/heebeumkang/tetris-finals/src/components/bgm.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Sound from \"react-sound\";\nimport bgm from \"../sound/Hurry_bgm.mp3\";\n// import \"./App.css\";\n\n\nexport default function PlaySound() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n\n  const handlePlay = () => {\n    audioRef.current.play();\n    setIsPlaying(true);\n  };\n\n  const handleStop = () => {\n    audioRef.current.pause();\n    audioRef.current.currentTime = 0;\n    setIsPlaying(false);\n  };\n\n  // useEffect(() => {\n  //   if(value)\n  //   play();\n  // }, [value]);\n\n  function play() {\n    new Audio(Hurry_bgm).play();\n  }\n\n  return (\n    <div>\n      <audio ref={audioRef}>\n        <source src={Hurry_bgm} type=\"bgm/mp3\" />\n      </audio>\n      {isPlaying ? (\n        <button onClick={handleStop}>Stop</button>\n      ) : (\n        <button onClick={handlePlay}>Play</button>\n      )}\n    </div>\n  );\n}\n// <button onClick={() => (setValue = value + 1)}>Play sound</button>;\n\n// const PlaySound = (\n//   handleSongLoading,\n//   handleSongPlaying,\n//   handleSongFinishedPlaying\n// ) => {\n//   const [isPlaying, setIsPlaying] = useState(false);\n//   return (\n//     <body>\n//     <div className=\"playsound\">\n//       <span className=\"songbox\">\n//        <button onClick={() => setIsPlaying(!isPlaying)}>{!isPlaying ? \"PLAY\" : \"STOP\"}</button>\n//       </span>\n//       <Sound\n//         url={Hurry_bgm}\n//         playStatus={\n//           isPlaying ? Sound.status.PLAYING : Sound.status.STOPPED\n//         }\n//         playFromPosition={300}\n//         onLoading={handleSongLoading}\n//         onPlaying={handleSongPlaying}\n//         onFinishedPlaying={handleSongFinishedPlaying}\n//       />\n//     </div>\n//     </body>\n//   )\n// };\n\n// export default PlaySound\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,GAAG,MAAM,wBAAwB;AACxC;AAAA;AAGA,eAAe,SAASC,SAAS,GAAG;EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMM,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMQ,UAAU,GAAG,MAAM;IACvBD,QAAQ,CAACE,OAAO,CAACC,IAAI,EAAE;IACvBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,UAAU,GAAG,MAAM;IACvBJ,QAAQ,CAACE,OAAO,CAACG,KAAK,EAAE;IACxBL,QAAQ,CAACE,OAAO,CAACI,WAAW,GAAG,CAAC;IAChCP,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA;EACA;EACA;;EAEA,SAASI,IAAI,GAAG;IACd,IAAII,KAAK,CAACC,SAAS,CAAC,CAACL,IAAI,EAAE;EAC7B;EAEA,oBACE;IAAA,wBACE;MAAO,GAAG,EAAEH,QAAS;MAAA,uBACnB;QAAQ,GAAG,EAAEQ,SAAU;QAAC,IAAI,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACnC,EACPV,SAAS,gBACR;MAAQ,OAAO,EAAEM,UAAW;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,gBAE1C;MAAQ,OAAO,EAAEH,UAAW;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,GAlEwBJ,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}